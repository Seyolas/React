import Head from 'next/head'
import { useState } from 'react';
import paginate from './utils';
import Link from "next/link";
import {FaWindows, FaChrome} from "react-icons/fa";
import {FcNext, FcPrevious} from "react-icons/fc";
export const getStaticProps = async ()=>{
  const response = await fetch('https://www.freetogame.com/api/games');
  const data = await response.json();
  return {
     props:{games:data}
  }

}

export default function Home({games}) {
  const data = paginate(games);
 
  const [page,setPage] = useState(0);
  const [sort, setSort] = useState("");
 const [veri,setVeri] = useState(data);

  const handleClick = (current)=>{
    if (current === 'prev') {
      setPage((value)=>value-1);
      if (page===0) {
        setPage(0)
      }
    }
    else{
      setPage((value)=>value+1);
      if (page===veri.length-1) {
        setPage(veri.length-1);
      }
    }
  }

  const updateSort = (e)=>{
   
    const value = e.target.value;
   setPage(0);

    console.log(page);
    setSort(value);
    if (value === 'name-windows') {

      const filtered_games = games.filter((i)=>i.platform === 'PC (Windows)')
    setVeri(paginate(filtered_games))
    }
    if (value === 'name-both') {
      const filtered_games = games.filter((i)=>i.platform === 'PC (Windows), Web Browser')
      setVeri(paginate(filtered_games))
    }
    if (value === 'name-chrome') {
      const filtered_games = games.filter((i)=>i.platform === 'Web Browser')

      setVeri(paginate(filtered_games));
      console.log(veri);
    }
    if (value === 'name-all') {
      setVeri(data);
    }
   
    
  }
  
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


    <form>
    <label htmlFor="sort">Sort by</label>
      <select name="sort" id="sort" className='sort-input' value={sort} onChange={updateSort}>
      <option value="name-all">All</option>
      <option value="name-windows">Windows</option>
      <option value="name-chrome">Chrome</option>
      <option value="name-both">Windows, Chrome</option>

      </select>
  </form>

  <main>
    {veri[page].map((i)=>{
      const {id,title,thumbnail,platform} = i;
        return (
      <Link href={`/game/${id}`}key={id}><a className='item'>
        <div className='right'><img width={100} src={thumbnail} alt={title} /></div>
        <div className='left'>
            <p className='title'>{title}</p>
            <div className='platform'>
            {
            platform ==='PC (Windows)' && <div><FaWindows/></div> ||
            platform ==='Web Browser' && <div><FaChrome/></div> ||
            platform ==='PC (Windows), Web Browser' && <div><FaWindows/><FaChrome/></div>}
            </div>
        </div>
        </a></Link>
        )
    })}
    </main>

    <div className="buttons-container">
      <button onClick={()=>handleClick('prev')} type='click'><FcPrevious/></button>
      <button onClick={()=>handleClick('next')} type='click'><FcNext/></button>
    </div>



    
      <style jsx>{`
            form{
              display:flex;
              width:20vw;
              margin-left:2rem;
              justify-content:flex-start;
              padding:0.2rem 0.3rem;
              margin-top:1rem;
              margin-bottom:1rem;
              color:#fff;
              opacity:0.7;
              font-size:1.5rem;
            }
            form select{
              background-color:rgb(56, 56, 56);
              border:none;
              color:#fff;
              opacity:0.9;
              margin-left:1rem;
              font-size:1rem;

            }
            select option:hover {
            background-color:pink;
            }
           
            form svg{
              color:#D1D5DB;
              align-self:center;
              cursor:pointer;
            }
           
            
          
          .buttons-container{
            left:260px;
            position:fixed;
            bottom:15px;
          }
      
          .buttons-container button{
            padding:0.3rem 0.5rem;
            margin:0.2rem;
            background-color:#FFFBEB;
            color:#fff;
            opacity:0.7;
            letter-spacing:1px;
            border:none;
            font-weight:bolder;
            cursor:pointer;
            transition:0.4s all;
          }
          .buttons-container button:hover{
            opacity:1;

          }

          main{
          width:50vw;
          margin:0 2rem;
        }
      
        .item{
          display:flex;
          align-items:center;
          padding:1px;
          color:#fff;
          opacity:0.7;
          transition:0.3s all;
          width:fit-content;
          
        }
        .item:hover{
          opacity:1;
        }
        .left{
          display:flex; 
          flex-direction:column;  
        }
        .left .title{
          font-weight:bolder;
          font-size:larger;
          color:#fff;
        }
        .left .platform{
          opacity:0.5;
          margin-left:0.3rem;
        }
        
        .left p{
          padding-left:0.4rem;
        }
       
        `}

      </style>
    </>
  )

  
}
